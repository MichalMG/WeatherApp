{"version":3,"sources":["assets/images/1.jpg","Components/WeatherInfo/WeatherInfoElement.js","assets/therm.svg","assets/therm2.svg","assets/cloud.svg","assets/wind.svg","assets/sun.svg","Components/WeatherInfo/WeatherInfo.js","Components/WeatherApp/WeatherApp.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherInfoElement","image","title","result","symbol","last","className","src","alt","style","minWidth","WeatherInfo","sunset","sunrise","name","country","minTemp","maxTemp","wind","clouds","pressure","fellsTemp","top","right","fontSize","backgroundColor","thermCold","thermHot","windIco","cloudIco","sunIco","API_KEY","process","API_URL","WeatherApp","lat","lon","useState","city","setCity","message","setMessage","weatherContainer","setWeatherContainer","weatherInfo","setWeatherInfo","unixTimeHandler","time","newTime","Date","hours","getHours","minutes","getMinutes","showWeather","data","main","sys","temp_min","temp_max","feels_like","speed","all","getCurrentUserLocation","fetch","then","response","json","console","log","catch","err","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onSubmit","event","preventDefault","status","type","placeholder","value","onChange","target","App","backgroundImage","img1","backgroundSize","backgroundRepeat","minHeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a94f0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.9f80ee07.jpg\";","export default function WeatherInfoElement({ image, title, result, symbol, last }) {\r\n\r\n  return (\r\n    <tr className={`align-middle ${last ? '' : 'border-bottom border-secondary'} `}>\r\n      <td className=\"border-0 d-flex justify-content-center\">\r\n        {image ? <img src={image} alt={`${title} ikona`} /> : null}\r\n      </td>\r\n      <td className=\"border-0\">{title}</td>\r\n      <td className=\"border-0\" style={{ minWidth: '90px' }}>{result} {symbol ? symbol : null}</td>\r\n    </tr>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/therm.16171ea3.svg\";","export default __webpack_public_path__ + \"static/media/therm2.871c2abc.svg\";","export default __webpack_public_path__ + \"static/media/cloud.93e4352a.svg\";","export default __webpack_public_path__ + \"static/media/wind.7115b5aa.svg\";","export default __webpack_public_path__ + \"static/media/sun.fbad53a5.svg\";","import WeatherInfoElement from \"./WeatherInfoElement\";\r\nimport thermHot from '../../assets/therm.svg';\r\nimport thermCold from '../../assets/therm2.svg';\r\nimport cloudIco from '../../assets/cloud.svg';\r\nimport windIco from '../../assets/wind.svg';\r\nimport sunIco from '../../assets/sun.svg';\r\n\r\nexport default function WeatherInfo({ sunset, sunrise, name, country, minTemp, maxTemp, wind, clouds, pressure, fellsTemp }) {\r\n  return (\r\n    <div className=\"row mt-4\">\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"justify-content-center d-flex\">\r\n          <h4 className=\"position-relative fw-bold\">Temperatura dla: {name} <span className=\"badge position-absolute bg-warning\" style={{ top: \"-50%\", right: \"-15%\", fontSize: '.8rem' }}>{country}</span></h4>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-12 text-white  justify-content-center\">\r\n\r\n        <table className=\"table text-light\" style={{ backgroundColor: 'rgba(0,0,0,.45)' }}>\r\n          <tbody >\r\n            <WeatherInfoElement image={thermCold} title=\"Minimalna temperatura:\" result={minTemp} symbol=\"&#8451;\" />\r\n            <WeatherInfoElement image={thermHot} title=\"Maksymalna temperatura:\" result={maxTemp} symbol=\"&#8451;\" />\r\n            <WeatherInfoElement title=\"Odczuwalna temperatura:\" result={fellsTemp} symbol=\"&#8451;\" />\r\n            <WeatherInfoElement title=\"Ciśnienie:\" result={pressure} symbol=\"hPa\" />\r\n            <WeatherInfoElement image={windIco} title=\"Prędkość wiatru:\" result={wind} symbol=\"m/s\" />\r\n            <WeatherInfoElement image={cloudIco} title={clouds === 0 ? 'Bezchmurne niebo' : 'Zachmurzenie'} result={clouds === 0 ? '' : clouds} symbol={clouds === 0 ? '' : '%'} />\r\n            <WeatherInfoElement image={sunIco} title=\"Wschód słońca: \" result={sunrise} symbol=\"h\" />\r\n            <WeatherInfoElement image={sunIco} title=\"zachód słońca: \" result={sunset} symbol=\"h\" last=\"last\" />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from \"react\"\r\nimport WeatherInfo from \"../WeatherInfo/WeatherInfo\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst API_URL = 'https://api.openweathermap.org/data/2.5/';\r\n\r\nexport default function WeatherApp() {\r\n\r\n\r\n  const [city, setCity] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [weatherContainer, setWeatherContainer] = useState(false);\r\n  const [weatherInfo, setWeatherInfo] = useState({});\r\n\r\n  let lat;\r\n  let lon;\r\n\r\n\r\n  const cityHandler = (event) => {\r\n    const value = event.target.value;\r\n    setCity(value);\r\n  }\r\n\r\n  const formHandler = (event) => {\r\n    event.preventDefault();\r\n    fetchWeather();\r\n  }\r\n\r\n  function fetchWeather() {\r\n    fetch(`${API_URL}weather?q=${city}&appid=${API_KEY}&units=metric`)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setMessage('');\r\n          setWeatherContainer(true);\r\n          return response;\r\n        } else if (response.status === 404) {\r\n          setWeatherContainer(false);\r\n          setMessage(`Nie znaleziono miejscowości: ${city}`)\r\n        } else if (response.status === 400) {\r\n          setMessage(\"Wpisz miasto\");\r\n          setWeatherContainer(false);\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => showWeather(data))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  function unixTimeHandler(time) {\r\n    const newTime = new Date(time * 1000);\r\n    const hours = newTime.getHours();\r\n    const minutes = newTime.getMinutes();\r\n\r\n    return `${hours} : ${minutes < 10 ? `0${minutes}` : minutes}`;\r\n  }\r\n\r\n  function showWeather(data) {\r\n    const { name, main, wind, clouds, sys } = data;\r\n    const sunset = unixTimeHandler(sys.sunset);\r\n    const sunrise = unixTimeHandler(sys.sunrise);\r\n    setWeatherInfo({\r\n      sunset,\r\n      sunrise,\r\n      name,\r\n      country: sys.country,\r\n      minTemp: main.temp_min,\r\n      maxTemp: main.temp_max,\r\n      fellsTemp: main.feels_like,\r\n      wind: wind.speed,\r\n      clouds: clouds.all,\r\n      pressure: main.pressure\r\n    });\r\n    setWeatherContainer(true);\r\n  }\r\n\r\n  const checkLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      lat = position.coords.latitude;\r\n      lon = position.coords.longitude;\r\n      getCurrentUserLocation();\r\n    })\r\n  }\r\n\r\n  const getCurrentUserLocation = () => {\r\n    fetch(`${API_URL}/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        return showWeather(data)\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      checkLocation();\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"row justify-content-center \">\r\n        <div className=\"col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4 px-1 px-sm-3\" style={{ backgroundColor: 'rgba(255,255,255,.25)' }}>\r\n          <form onSubmit={formHandler} className=\"d-flex py-3 px-2 px-sm-0\">\r\n            <input className=\"form-control\" type=\"text\" placeholder=\"wpisz miasto...\" value={city} onChange={cityHandler} />\r\n            <button className=\"btn btn-primary ms-3\" type=\"submit\">Wyszukaj</button>\r\n          </form>\r\n          {message\r\n            ? (<div className=\"alert alert-danger mt-4\">\r\n              <p className=\"p-0 m-0 text-center\">{message}</p>\r\n            </div>)\r\n            : null}\r\n          {weatherContainer\r\n            ? (<WeatherInfo {...weatherInfo} />)\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport img1 from '../src/assets/images/1.jpg';\nimport WeatherApp from './Components/WeatherApp/WeatherApp';\n\nfunction App() {\n\n  return (\n    <>\n\n      <div className=\"d-flex align-items-center justify-content-center position-relative\" style={{ backgroundImage: `url(${img1})`, backgroundSize: 'cover', backgroundRepeat: 'no-repeat', minHeight: '100vh' }}>\n        <WeatherApp />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}